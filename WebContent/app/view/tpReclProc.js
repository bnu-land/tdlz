/*
 * File: app/view/tpReclProc.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.tpReclProc', {
    extend: 'Ext.tree.Panel',
    alias: 'widget.mytreepanel',

    id: 'tpReclProc',
    title: '拆迁（复垦）过程',
    store: 'treeReclProc',
    rootVisible: false,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {
                listeners: {
                    itemclick: {
                        fn: me.onViewItemClick,
                        scope: me
                    }
                }
            }
        });

        me.callParent(arguments);
    },

    onViewItemClick: function(dataview, record, item, index, e, eOpts) {
        Ext.getCmp("body").getLayout().setActiveItem(4);
        switch(record.raw.id)
        {
            case 501:
            	{
            		var store = Ext.getCmp("writeArea").getStore();
            		store.load({params:{flag: ""},
	            		callback: function(records, options, success){
	            			Ext.getCmp("ReclProc").getLayout().setActiveItem(0);
	            		}
            		});
            		break;
            	}
            case 502:
            	{
	            	var store = Ext.getCmp("writeArea").getStore();
	        		store.load({params:{flag: "1"},
	            		callback: function(records, options, success){
	            			Ext.getCmp("ReclProc").getLayout().setActiveItem(1);
	            		}
	        		});   
            		break;
            	}
            	
            case 503:
            	{
	            	var store = Ext.getCmp("writeArea").getStore();
	        		store.load({params:{flag: "1"},
	            		callback: function(records, options, success){
	            			Ext.getCmp("ReclProc").getLayout().setActiveItem(2);
	            		}
	        		});  
            		break;
            	}
            case 504:Ext.getCmp("ReclProc").getLayout().setActiveItem(3);break;
            case 505:
            	{
	            	var store = Ext.getCmp("writeArea").getStore();
	        		store.load({params:{flag: ""},
	            		callback: function(records, options, success){
	            			Ext.getCmp("ReclProc").getLayout().setActiveItem(6);
	            		}
	        		});
            		break;
            	}

        }
    }

});