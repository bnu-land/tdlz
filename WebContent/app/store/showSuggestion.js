/*
 * File: app/store/suggestionGH.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.store.showSuggestion', {
    extend: 'Ext.data.Store',

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            storeId: 'showSuggestion',
            
            proxy:{
        		type:"ajax",
        		url:"showSuggest.action",
        		
        		reader:{
        			type:"json",
        			root:"results",
        			totalProperty :'totalCount'		
        		},
        		actionMethods: {  
                    read: 'POST'  
                },
        		writer:{
        			type:"json"
        		}
        	},
        	//pageSize: 2,
        	//autoLoad: {params:{start: 0, limit: 2,  date: "" }},
            
            fields: [
                {
                    name: 'content',
                    type: 'string',
                    useNull: true
                },
                {
                    name: 'projectID',
                    type: 'string',
                    useNull: true
                },
                {
                    name: 'publisher',
                    type: 'string',
                    useNull: true
                },
                {
                    name: 'date',
                    type: 'auto',
                    useNull: true
                },
           
            ],
        	listeners: {
         		 
                load: {
                    fn: me.onStoreLoad,
                    scope: me
                }
            }
        }, cfg)]);
        
        this.load({params:{start: 0, limit: -1,  date: "", noticeID: "1"}});
    },

	onStoreLoad: function(store, records, successful, eOpts) {
		
		
	
	//	store.filterBy(function(record) {
	//	    return record.get('category') == activeTitle;
	//	});
	
	}
});