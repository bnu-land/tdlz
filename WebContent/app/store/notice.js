/*
 * File: app/store/notice.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.store.notice', {
    extend: 'Ext.data.Store',

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            storeId: 'noticeGH',
            proxy:{
        		type:"ajax",
        		url:"showNotice.action",
        		
        		reader:{
        			type:"json",
        			root:"results",
        			totalProperty :'totalCount'		
        		},
        		actionMethods: {  
                    read: 'POST'  
                },
        		writer:{
        			type:"json"
        		}
        	},
        	pageSize: 2,
        	autoLoad: {params:{start: 0, limit: 2, category: "规划方案", date: ""}},
            fields: [
                     
                {
                    name: 'title',
                    type: 'string',
                    useNull: true
                },
                {
                    name: 'content',
                    type: 'string',
                    useNull: true
                },
                {
                    name: 'publisher',
                    type: 'string',
                    useNull: true
                },
                {
                    name: 'date',
                    type: 'auto',
                    useNull: true
                },
                {
                    name: 'category',
                    type: 'string',
                    useNull: true
                },
                {
                    name: 'projectID',
                    type: 'string',
                    useNull: true
                },
                {
                	name: 'enclosureFlag',
                    type: 'string',
                    useNull: true
                },
                {
                	name: 'enclosurePath',
                    type: 'string',
                    useNull: true
                },
                
            ],
            listeners: {
          		 
                load: {
                    fn: me.onStoreLoad,
                    scope: me
                }
            }
            
        }, cfg)]);
    },
    onStoreLoad: function(store, records, successful, eOpts) {
//		var activeTitle = Ext.getCmp("allNotice").getActiveTab().title;
//		
//		 var personInfoStore = Ext.getCmp("gridviewShowNoticeGH").getStore();
//		   var totalCount = personInfoStore.getTotalCount(); // 所有的记录数，不单单是当前页展示的数据  
//          var pageSize = personInfoStore.pageSize; // 一页上面展示的记录条数  
//          var curPage = personInfoStore.currentPage; // 当前页码  
//          var fromRecord = ((curPage - 1) * pageSize) + 1; // 当前页展示的起始记录号  
//          var toRecord = Math.min(curPage * pageSize, totalCount); // 当前页展示的结尾记录号  
//          var totalOnCurPage = toRecord - fromRecord + 1; // 当前页展示的记录条数  
//          var totalPageCount = Math.ceil(totalCount / pageSize); // 总的页数  
//          var delCount = length; // 删除的记录条数  
//          //若当前页是最后一页，且不是仅有的一页，且删除的记录数是当前页上的所有记录数  
//          if (curPage === totalPageCount && totalPageCount != 1 && delCount === totalOnCurPage)  
//          {  
//              personInfoStore.currentPage--;  
//          }  
	//	store.filterBy(function(record) {
	//	    return record.get('category') == activeTitle;
	//	});
	
	}
});