/*
 * File: app/store/ruleCQ.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.store.ruleCQ', {
    extend: 'Ext.data.Store',

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            storeId: 'ruleCQ',
            proxy: {
            	type:"ajax",
        		url:"showWarmRules.action",
        		
        		reader:{
        			type:"json",
        			root:"results",
        			totalProperty :'totalCount'		
        		},
        		actionMethods: {  
                    read: 'POST'  
                },
        		writer:{
        			type:"json"
        		}
            },
            fields: [
                {
                    name: 'id',
                    type: 'auto'
                },
                {
                    name: 'projectID',
                    type: 'string'
                },
                {
                    name: 'createTime',
                    type: 'date'
                },
                {
                    name: 'warmTarget',
                    type: 'string'
                },
                {
                    name: 'warmContent',
                    type: 'string'
                },
                {
                    name: 'endTime',
                    type: 'date'
                },
                {
                    name: 'ruleDescription',
                    type: 'string'
                },
                {
                    name: 'cycleTime',
                    type: 'auto'
                },
                {
                    name: 'warmContentID',
                    type: 'auto'
                },
                {
                    name: 'warmTargetID',
                    type: 'auto'
                },

                
            ]
        }, cfg)]);
        this.load();
    }
});